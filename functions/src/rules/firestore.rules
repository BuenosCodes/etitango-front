rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function notUpdating(field) {
      return !(field in request.resource.data)
      || resource.data[field] == request.resource.data[field]
    }

    function requestBelongsToUser() {
      return request.resource.data.userId == request.auth.uid
    }

    function resourceBelongsToUser() {
      return resource.data.userId == request.auth.uid
    }

    function signedIn() {
      return request.auth.uid != null
    }

    function getUserData(){
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin(){
      return getUserData().roles['admin'] == true;
    }


    match /{document=**} {
      allow read, write: if false;
    }

    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth.uid == userId;
    }

    match /banks/{document=**} {
      allow write: if requestBelongsToUser();
      allow read: if requestBelongsToUser() || isAdmin();
    }

    match /signups/{document=**} {
      allow read: if signedIn();
      allow create: if requestBelongsToUser();
      allow update: if (resourceBelongsToUser() || isAdmin()) && notUpdating('userId') && notUpdating('etiEventId');
    }

    match /events/{document=**} {
      allow read: if signedIn() || isAdmin();
      allow write: if isAdmin();
    }
  }
}